I***Tracer: showInfo = true
I***EvtType(util.trace.session.QueueCreated) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Session Manager) Name(Output Message Queue(4))
I***EvtType(util.trace.session.ThreadCreated) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Session Manager) Name(Message Sender)
I***EvtType(util.trace.session.QueueCreated) EvtSrc(util.session.AMessageReceiver)  Thread(main) Process(Session Manager) Name(Input Message Queue(5))
I***EvtType(util.trace.session.ThreadCreated) EvtSrc(util.session.AMessageReceiver)  Thread(main) Process(Session Manager) Name(Message Receiver)
I***EvtType(util.trace.session.ClientJoinInitiated) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) User(Bob), App(IM), Session(FrostySession)
I***EvtType(util.trace.session.JoinRequestMarshalled) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg(Sent([Type(Join]; Data[]])) Address(Bob)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(main) Process(Bob) Msg(Sent([Type(Join]; Data[]]))
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.ASentMessageQueuer)  Thread(main) Process(Bob) Msg(Sent([Type(Join]; Data[]])) Address(Bob) Name(Output Message Queue(4))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageSenderRunnable)  Thread(Message Sender) Process(Bob) Msg(Sent([Type(Join]; Data[]])) Address(null) Name(Output Message Queue(4))
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AMessageSenderRunnable)  Thread(Message Sender) Process(Bob) Msg(Sent([Type(Join]; Data[]])) Address(Session Manager)
I***EvtType(util.trace.session.SessionMessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(1)-127.0.0.1) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Bob)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(1)-127.0.0.1) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Bob) Name(Input Message Queue(5))
I***EvtType(util.trace.session.ClientJoinFinished) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) User(Bob), App(IM), Session(FrostySession)
Please enter an input line or quit or history
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output(Please enter an input line or quit or history)
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Bob) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Bob)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]]))
I***EvtType(util.trace.session.ClientJoinNotificationUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Address(Bob)
I***EvtType(util.trace.session.ClientJoinNotificationDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) User(Bob), App(IM), Session(FrostySession)
I***EvtType(util.trace.session.ClientJoinInformationUpdated) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) User(Bob), App(IM), Session(FrostySession)
I***EvtType(util.trace.session.ClientJoinNotificationDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) User(Alice), App(IM), Session(FrostySession)
I***EvtType(util.trace.session.ClientJoinInformationUpdated) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) User(Alice), App(IM), Session(FrostySession)
I***EvtType(util.trace.session.SessionMessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(1)-127.0.0.1) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Cathy)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(1)-127.0.0.1) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]])) Address(Cathy)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(ClientJoined]; Data[]]))
I***EvtType(util.trace.session.ClientJoinNotificationUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Address(Cathy)
I***EvtType(util.trace.session.ClientJoinNotificationDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) User(Cathy), App(IM), Session(FrostySession)
I***EvtType(util.trace.session.ClientJoinInformationUpdated) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) User(Cathy), App(IM), Session(FrostySession)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg([0; [Alice]Alice0]) Address(Alice)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[0; [Alice]Alice0]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[0; [Alice]Alice0]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[0; [Alice]Alice0]]])) Address(Alice)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[0; [Alice]Alice0]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([0; [Alice]Alice0]) Address(Alice)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([0; [Alice]Alice0]) Address(Alice)
[Alice]Alice0
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Alice]Alice0)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg([1; [Alice]The woods are lovely dark and deep]) Address(Alice)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[1; [Alice]The woods are lovely dark and deep]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[1; [Alice]The woods are lovely dark and deep]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[1; [Alice]The woods are lovely dark and deep]]])) Address(Alice)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[1; [Alice]The woods are lovely dark and deep]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([1; [Alice]The woods are lovely dark and deep]) Address(Alice)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([1; [Alice]The woods are lovely dark and deep]) Address(Alice)
[Alice]The woods are lovely dark and deep
$ Bob1
I***EvtType(util.trace.console.ConsoleInput)  Thread(BobP2PIMOutput) Input(Bob1)
$ But I have promises to keep
I***EvtType(util.trace.console.ConsoleInput)  Thread(BobP2PIMOutput) Input(But I have promises to keep)
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Alice]The woods are lovely dark and deep)
[Bob]Bob1
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Bob]Bob1)
I***EvtType(util.trace.session.SendDataRequest) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg([2; [Bob]Bob1]) Address(others) Delivery(Direct)
I***EvtType(util.trace.session.ToOthersDataSendMarshalled) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[2; [Bob]Bob1]]])) Address(others)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[2; [Bob]Bob1]]]))
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.ASentMessageQueuer)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[2; [Bob]Bob1]]])) Address(Bob) Name(Output Message Queue(4))
Please enter an input line or quit or history
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output(Please enter an input line or quit or history)
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageSenderRunnable)  Thread(Message Sender) Process(Bob) Msg(Sent([Type(Others]; Data[[2; [Bob]Bob1]]])) Address(null) Name(Output Message Queue(4))
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[2; [Bob]Bob1]]])) Address(Alice)
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[2; [Bob]Bob1]]])) Address(Cathy)
[Bob]But I have promises to keep
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Bob]But I have promises to keep)
I***EvtType(util.trace.session.SendDataRequest) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg([3; [Bob]But I have promises to keep]) Address(others) Delivery(Direct)
I***EvtType(util.trace.session.ToOthersDataSendMarshalled) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[3; [Bob]But I have promises to keep]]])) Address(others)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[3; [Bob]But I have promises to keep]]]))
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.ASentMessageQueuer)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[3; [Bob]But I have promises to keep]]])) Address(Bob) Name(Output Message Queue(4))
Please enter an input line or quit or history
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output(Please enter an input line or quit or history)
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageSenderRunnable)  Thread(Message Sender) Process(Bob) Msg(Sent([Type(Others]; Data[[3; [Bob]But I have promises to keep]]])) Address(null) Name(Output Message Queue(4))
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[3; [Bob]But I have promises to keep]]])) Address(Alice)
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[3; [Bob]But I have promises to keep]]])) Address(Cathy)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg([2; [Cathy]Cathy2]) Address(Cathy)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[2; [Cathy]Cathy2]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[2; [Cathy]Cathy2]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[2; [Cathy]Cathy2]]])) Address(Cathy)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[2; [Cathy]Cathy2]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([2; [Cathy]Cathy2]) Address(Cathy)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([2; [Cathy]Cathy2]) Address(Cathy)
[Cathy]Cathy2
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Cathy]Cathy2)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg([3; [Cathy]And miles to go before I sleep]) Address(Cathy)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[3; [Cathy]And miles to go before I sleep]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[3; [Cathy]And miles to go before I sleep]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[3; [Cathy]And miles to go before I sleep]]])) Address(Cathy)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[3; [Cathy]And miles to go before I sleep]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([3; [Cathy]And miles to go before I sleep]) Address(Cathy)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([3; [Cathy]And miles to go before I sleep]) Address(Cathy)
[Cathy]And miles to go before I sleep
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Cathy]And miles to go before I sleep)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg([6; [Alice]Alice3]) Address(Alice)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Alice]Alice3]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Alice]Alice3]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Alice]Alice3]]])) Address(Alice)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Alice]Alice3]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([6; [Alice]Alice3]) Address(Alice)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([6; [Alice]Alice3]) Address(Alice)
[Alice]Alice3
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Alice]Alice3)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg([7; [Alice]The woods are lovely dark and deep]) Address(Alice)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(2)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Alice]The woods are lovely dark and deep]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Alice]The woods are lovely dark and deep]]])) Address(Alice) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Alice]The woods are lovely dark and deep]]])) Address(Alice)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Alice]The woods are lovely dark and deep]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([7; [Alice]The woods are lovely dark and deep]) Address(Alice)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([7; [Alice]The woods are lovely dark and deep]) Address(Alice)
[Alice]The woods are lovely dark and deep
$ Bob4
I***EvtType(util.trace.console.ConsoleInput)  Thread(BobP2PIMOutput) Input(Bob4)
$ But I have promises to keep
I***EvtType(util.trace.console.ConsoleInput)  Thread(BobP2PIMOutput) Input(But I have promises to keep)
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Alice]The woods are lovely dark and deep)
[Bob]Bob4
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Bob]Bob4)
I***EvtType(util.trace.session.SendDataRequest) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg([8; [Bob]Bob4]) Address(others) Delivery(Direct)
I***EvtType(util.trace.session.ToOthersDataSendMarshalled) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[8; [Bob]Bob4]]])) Address(others)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[8; [Bob]Bob4]]]))
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.ASentMessageQueuer)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[8; [Bob]Bob4]]])) Address(Bob) Name(Output Message Queue(4))
Please enter an input line or quit or history
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output(Please enter an input line or quit or history)
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageSenderRunnable)  Thread(Message Sender) Process(Bob) Msg(Sent([Type(Others]; Data[[8; [Bob]Bob4]]])) Address(null) Name(Output Message Queue(4))
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[8; [Bob]Bob4]]])) Address(Alice)
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[8; [Bob]Bob4]]])) Address(Cathy)
[Bob]But I have promises to keep
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Bob]But I have promises to keep)
I***EvtType(util.trace.session.SendDataRequest) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg([9; [Bob]But I have promises to keep]) Address(others) Delivery(Direct)
I***EvtType(util.trace.session.ToOthersDataSendMarshalled) EvtSrc(util.session.ADirectCommunicator)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[9; [Bob]But I have promises to keep]]])) Address(others)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[9; [Bob]But I have promises to keep]]]))
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.ASentMessageQueuer)  Thread(main) Process(Bob) Msg(Sent([Type(Others]; Data[[9; [Bob]But I have promises to keep]]])) Address(Bob) Name(Output Message Queue(4))
Please enter an input line or quit or history
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output(Please enter an input line or quit or history)
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageSenderRunnable)  Thread(Message Sender) Process(Bob) Msg(Sent([Type(Others]; Data[[9; [Bob]But I have promises to keep]]])) Address(null) Name(Output Message Queue(4))
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[9; [Bob]But I have promises to keep]]])) Address(Alice)
I***EvtType(util.trace.session.MessageSent) EvtSrc(util.session.AProcessGroup)  Thread(Message Sender) Process(Bob) Msg((Received[Type(NewObject]; Data[[9; [Bob]But I have promises to keep]]])) Address(Cathy)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg([6; [Cathy]Cathy5]) Address(Cathy)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Cathy]Cathy5]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Cathy]Cathy5]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Cathy]Cathy5]]])) Address(Cathy)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[6; [Cathy]Cathy5]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([6; [Cathy]Cathy5]) Address(Cathy)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([6; [Cathy]Cathy5]) Address(Cathy)
[Cathy]Cathy5
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Cathy]Cathy5)
I***EvtType(util.trace.session.MessageReceived) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg([7; [Cathy]And miles to go before I sleep]) Address(Cathy)
I***EvtType(util.trace.session.MessagePutInQueue) EvtSrc(util.session.AMessageReceiver)  Thread(RMI TCP Connection(4)-127.0.0.1) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Cathy]And miles to go before I sleep]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageRetrievedFromQueue) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Cathy]And miles to go before I sleep]]])) Address(Cathy) Name(Input Message Queue(5))
I***EvtType(util.trace.session.MessageGivenToFilter) EvtSrc(util.session.AMessageReceiverRunnable)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Cathy]And miles to go before I sleep]]])) Address(Cathy)
I***EvtType(util.trace.session.MessageForwarded) EvtSrc(util.session.AMessageForwarder)  Thread(Message Receiver) Process(Bob) Msg((Received[Type(NewObject]; Data[[7; [Cathy]And miles to go before I sleep]]]))
I***EvtType(util.trace.session.ClientReceivedObjectUnmarshalled) EvtSrc(util.session.AReceivedMessageUmarshaller)  Thread(Message Receiver) Process(Bob) Msg([7; [Cathy]And miles to go before I sleep]) Address(Cathy)
I***EvtType(util.trace.session.ReceivedMessageDistributedToListeners) EvtSrc(util.session.AnUmarshalledReceivedMessageDispatcherAndSessionStateManager)  Thread(Message Receiver) Process(Bob) Msg([7; [Cathy]And miles to go before I sleep]) Address(Cathy)
[Cathy]And miles to go before I sleep
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Cathy]And miles to go before I sleep)
$ history
I***EvtType(util.trace.console.ConsoleInput)  Thread(AliceP2PDelayingIMOutput) Input(history)
[Alice]Alice0, [Alice]The woods are lovely dark and deep, [Cathy]Cathy2, [Cathy]And miles to go before I sleep, [Bob]Bob1, [Bob]But I have promises to keep, [Cathy]Cathy5, [Cathy]And miles to go before I sleep, [Alice]Alice3, [Alice]The woods are lovely dark and deep, [Bob]Bob4, [Bob]But I have promises to keep
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output([Alice]Alice0, [Alice]The woods are lovely dark and deep, [Cathy]Cathy2, [Cathy]And miles to go before I sleep, [Bob]Bob1, [Bob]But I have promises to keep, [Cathy]Cathy5, [Cathy]And miles to go before I sleep, [Alice]Alice3, [Alice]The woods are lovely dark and deep, [Bob]Bob4, [Bob]But I have promises to keep)

I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output()
Please enter an input line or quit or history
I***EvtType(util.trace.console.ConsoleOutput)  Thread(BobP2PIMOutput) Output(Please enter an input line or quit or history)
